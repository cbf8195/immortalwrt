steps:
  - name: Checkout source code
    uses: actions/checkout@v4
    with:
      fetch-depth: 0

  - name: Initialization environment
    run: |
      sudo apt update -y
      sudo apt install -y build-essential gcc-multilib g++-multilib flex gawk gettext git libncurses5-dev libssl-dev python3 unzip zlib1g-dev file wget curl
      sudo timedatectl set-timezone "$TZ"

  - name: Clone ImmortalWrt source
    run: |
      git clone https://github.com/immortalwrt/immortalwrt.git openwrt
      cd openwrt
      ./scripts/feeds update -a
      ./scripts/feeds install -a

  - name: Load custom configuration
    run: |
      cd openwrt
      rm -f .config
      cat << "EOF" > .config
      CONFIG_TARGET_x86=y
      CONFIG_TARGET_x86_64=y
      CONFIG_TARGET_x86_64_DEVICE_generic=y

      # Base System
      CONFIG_PACKAGE_luci=y
      CONFIG_PACKAGE_luci-ssl=y
      CONFIG_PACKAGE_luci-app-firewall=y
      CONFIG_PACKAGE_luci-app-ttyd=y
      CONFIG_PACKAGE_ca-certificates=y
      CONFIG_PACKAGE_bash=y
      CONFIG_PACKAGE_curl=y
      CONFIG_PACKAGE_wget=y
      CONFIG_PACKAGE_htop=y
      CONFIG_PACKAGE_screen=y

      # Network optimization for bypass
      CONFIG_PACKAGE_dnsmasq-full=y
      CONFIG_PACKAGE_ipset=y
      CONFIG_PACKAGE_iptables-mod-tproxy=y
      CONFIG_PACKAGE_iptables-mod-extra=y
      CONFIG_PACKAGE_iptables-mod-fullconenat=y
      CONFIG_PACKAGE_luci-app-upnp=y
      CONFIG_PACKAGE_luci-app-sqm=y
      CONFIG_PACKAGE_sqm-scripts=y
      CONFIG_PACKAGE_kmod-sched-cake=y
      CONFIG_PACKAGE_luci-app-arpbind=y
      CONFIG_PACKAGE_luci-app-wol=y
      CONFIG_PACKAGE_mwan3=y
      CONFIG_PACKAGE_luci-app-mwan3=y

      # Proxy system
      CONFIG_PACKAGE_luci-app-ssr-plus=y
      CONFIG_PACKAGE_shadowsocksr-libev=y
      CONFIG_PACKAGE_xray-core=y
      CONFIG_PACKAGE_v2ray-core=y
      CONFIG_PACKAGE_trojan-go=y
      CONFIG_PACKAGE_dns2socks=y
      CONFIG_PACKAGE_pdnsd-alt=y
      CONFIG_PACKAGE_luci-app-openclash=y
      CONFIG_PACKAGE_luci-app-homeproxy=y
      CONFIG_PACKAGE_luci-i18n-homeproxy-zh-cn=y

      # Docker container
      CONFIG_PACKAGE_dockerd=y
      CONFIG_PACKAGE_containerd=y
      CONFIG_PACKAGE_luci-app-dockerman=y
      CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y

      # Remote management
      CONFIG_PACKAGE_zerotier=y
      CONFIG_PACKAGE_luci-app-zerotier=y
      CONFIG_PACKAGE_tailscale=y
      CONFIG_PACKAGE_luci-app-tailscale=y
      CONFIG_PACKAGE_openssh-sftp-server=y

      # Storage and USB
      CONFIG_PACKAGE_block-mount=y
      CONFIG_PACKAGE_luci-app-diskman=y
      CONFIG_PACKAGE_fdisk=y
      CONFIG_PACKAGE_kmod-tun=y
      CONFIG_PACKAGE_kmod-usb-core=y
      CONFIG_PACKAGE_kmod-usb-net=y
      CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
      CONFIG_PACKAGE_kmod-usb-storage-extras=y

      # UI and Monitoring
      CONFIG_PACKAGE_luci-theme-argon=y
      CONFIG_PACKAGE_luci-app-argon-config=y
      CONFIG_PACKAGE_luci-app-netdata=y
      CONFIG_PACKAGE_netdata=y

      # Utils
      CONFIG_PACKAGE_coreutils=y
      CONFIG_PACKAGE_coreutils-base64=y
      CONFIG_PACKAGE_vim=y
      CONFIG_PACKAGE_git=y
      CONFIG_PACKAGE_diffutils=y
      CONFIG_PACKAGE_bind-dig=y
      CONFIG_PACKAGE_bind-host=y
      CONFIG_PACKAGE_ip-full=y
      EOF

  - name: Build firmware
    run: |
      cd openwrt
      make defconfig
      make -j$(nproc) download V=s
      make -j$(nproc) V=s

  - name: Upload firmware
    uses: actions/upload-artifact@v4
    with:
      name: ImmortalWrt-x86_64-Bypass
      path: openwrt/bin/targets/x86/64/
Commit new file â†’ Commit directly to the main branch
